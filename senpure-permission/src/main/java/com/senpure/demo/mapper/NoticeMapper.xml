<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.senpure.demo.mapper.NoticeMapper">
    <resultMap id="noticeResultMap" type="com.senpure.demo.model.Notice">
        <id     column="id"         property="id"        jdbcType="BIGINT"/>    <!-- 主键 -->
        <result column="version"    property="version"   jdbcType="INTEGER"/>   <!-- 乐观锁，版本控制 -->
        <result column="msg"        property="msg"       jdbcType="VARCHAR"/>   <!-- 公共内容 -->
        <result column="send_date"  property="sendDate"  jdbcType="TIMESTAMP"/> <!-- 发出时间 -->
    </resultMap>
    <sql id="noticeAllColumns">
        id,version,msg,send_date
    </sql>

    <!--主键查找-->
    <select id="find" resultMap="noticeResultMap" parameterType="Long">
        select <include refid="noticeAllColumns"/> from demo_notice where id = #{id}
    </select>

    <!--主键删除-->
    <delete id="delete" parameterType="Long">
        delete from demo_notice where id = #{id}
    </delete>


    <!--按条件删除(不取主键的值进行对比，即主键无效化)-->
    <delete id="deleteByCriteria" parameterType="com.senpure.demo.criteria.NoticeCriteria">
        delete from demo_notice
        <where>
            <if test="msg != null">
                and msg = #{msg}
            </if>
            <if test="startDate != null">
                and send_date >= #{startDate}
            </if>
            <if test="endDate != null">
                and send_date &lt;= #{endDate}
            </if>
        </where>
    </delete>

    <!-- 取对象的值，直接插入数据库(包括空值),version字段(版本控制)，被初始化为1-->
    <insert id="save" parameterType="com.senpure.demo.model.Notice" >
        insert into demo_notice (<include refid="noticeAllColumns"/>)
        values (#{id},1,#{msg},#{sendDate})
    </insert>

    <!-- 取对象的值，直接插入数据库(包括空值),version字段(版本控制)，被初始化为1-->
    <insert id="saveBatch" parameterType="com.senpure.demo.model.Notice" >
        insert into demo_notice (<include refid="noticeAllColumns"/>)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},1,#{item.msg},#{item.sendDate})
        </foreach>
    </insert>

    <!--会进行对象的空值判断，不为空才更新，以主键进行where判断,version字段(版本控制)，必须有有效值-->
    <update id="update" parameterType="com.senpure.demo.model.Notice">
        update demo_notice
        <set>
                <bind name="versionUpdate" value="version + 1"/>
                version = #{versionUpdate},
            <if test="msg != null">
                msg = #{msg},
            </if>
            <if test="sendDate != null">
                send_date = #{sendDate},
            </if>
        </set>
        where id = #{id}  and version =  #{version}
    </update>

    <!-- 直接将值覆盖到数据库，不会做为空判断，以主键进行where判断,version字段(版本控制)，必须有有效值-->
    <update id="cover" parameterType="com.senpure.demo.model.Notice">
        update demo_notice
        <set>
            <bind name="versionUpdate" value="version + 1"/>
            version = #{versionUpdate},
            msg = #{msg},
            send_date = #{sendDate},
        </set>
        where id = #{id}  and version =  #{version}
    </update>

    <!--会进行对象的空值判断，不为空才更新，主键无值时，可以进行批量更新-->
    <update id="updateByCriteria" parameterType="com.senpure.demo.criteria.NoticeCriteria">
        update demo_notice
        <set>
            <choose>
                <when test="version != null">
                    <bind name="versionUpdate" value="version + 1"/>
                    version = #{versionUpdate},
                </when>
                <otherwise>
                    version = version + 1,
                </otherwise>
            </choose>
                <if test="msg != null">
                    msg = #{msg},
                </if>
                <if test="sendDate != null">
                    send_date = #{sendDate},
                </if>
        </set>
        <where>
                <if test="id != null">
                    id = #{id}
                 </if>
                <if test="startDate != null">
                    and send_date >= #{startDate}
                </if>
                <if test="endDate != null">
                    and send_date &lt;= #{endDate}
                </if>
                <if test="version != null">
                    and version =  #{version}
                </if>
        </where>
     </update>

    <select id="count" resultType="int">
        select count(*) from demo_notice
    </select>

    <select id="findAll" resultMap="noticeResultMap" parameterType="Long">
        select <include refid="noticeAllColumns"/> from demo_notice
    </select>

    <!--主键会无效化,不会进行条件对比-->
    <select id="countByCriteria" resultType="int" parameterType="com.senpure.demo.criteria.NoticeCriteria">
        select count(*) from demo_notice
        <where>
            <if test="msg != null">
                and msg = #{msg}
            </if>
            <if test="startDate != null">
               and send_date >= #{startDate}
            </if>
            <if test="endDate != null">
                 and send_date &lt;= #{endDate}
            </if>
        </where>
    </select>

    <!--主键会无效化,不会进行条件对比-->
    <select id="findByCriteria" parameterType="com.senpure.demo.criteria.NoticeCriteria" resultMap="noticeResultMap">
        select <include refid="noticeAllColumns"/>
        from demo_notice
        <where>
            <if test="msg != null">
                and msg = #{msg}
            </if>
            <if test="startDate != null">
                and send_date >= #{startDate}
            </if>
            <if test="endDate != null">
                and send_date &lt;= #{endDate}
            </if>
        </where>
        <if test="hasOrder">
            ORDER BY
            <foreach collection="order" index="key" item="item" separator=",">
                <if test="item == 'DESC'">
                    ${key} DESC
                </if>
                <if test="item == 'ASC'">
                    ${key} ASC
                </if>
            </foreach>
        </if>
        <if test="usePage">
            <choose>
                <when test="firstResult == 0">
                    limit #{maxResults}
                </when>
                <otherwise>
                    limit #{firstResult}, #{maxResults}
                </otherwise>
            </choose>
        </if>
    </select>
</mapper>
